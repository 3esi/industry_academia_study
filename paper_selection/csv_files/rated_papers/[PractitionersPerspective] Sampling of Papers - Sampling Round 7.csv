Domain,Knowledge-seeking vs. Eval,Nerd factor/zu spezifisch,Validation Nerd Factor,Higher-level RQ,Distinguished,Bucket ID,Paper Name,Research Questions (max. 4),Notiz,Suitability Tendenz,Authors,URL
"AI and software engineering, Auto-coding",Evaluation,-,,,FALSE,-,A Transferable Time Series Forecasting Service using Deep Transformer model for Online Systems,"RQ1: Can the proposed time series forecasting model perform well across multiple data sources in the industrial environment?
RQ2:Howeffectivelydoestransferlearninghelpforecasting model share across multiple user preferences and enhance the forecasting performance? 
• RQ3: How effectively does incremental learning address concept drift and ensure long-term forecasting performance? 
• RQ4:Will information loss caused by frequency normalization affect the use and promotion of the forecasting service?",,,"Tao Huang, Pengfei Chen, Jingrun Zhang, Ruipeng Li, Rui Wang",No URL available
"AI and software engineering, Auto-coding",Evaluation,-,,,FALSE,-,BiasAsker: Measuring the Bias in Conversational AI System,"RQ1:HowdoesBiasAsker perform in exposing bias in conversational AI systems? 
• RQ2:Are the bias automatically found by BiasAsker valid? 
• RQ3:Whatcan welearn from the discovered bias?",,,"Yuxuan Wan, Wenxuan Wang, Pinjia He, Jiazhen Gu, Haonan Bai, Michael Lyu",No URL available
"AI and software engineering, Auto-coding",Knowledge-seeking,0,0,,FALSE,B1,Development in times of hype: How freelancers explore Generative AI?,RQ: What challenges do freelancers experience when developing solutions based on generative AI? ,,,"Mateusz Dolata, Norbert Lange, Gerhard Schwabe",No URL available
Testing and analysis,Evaluation,-,,,TRUE,-,QATest: A Uniform Fuzzing Framework for Question Answering Systems,"RQ1 (Metamorphic Transformations): How effective are different transformation methods for generating tests for various types of QA systems? In this RQ, we aim to provide a global picture of the effectiveness of QATest in revealing the erroneous behaviors of QA systems. We separately show the test case generation effect of three types of MRs proposed in this paper, and compare them with other existing QA systems testing techniques. 
RQ2(Testing Criteria): How effective are the different seed guidance criteria for detecting erroneous behaviors of QA systems? To evaluate the effectiveness of our proposed testing criteria as test generation guidance, we separately verify the effectiveness of generating test data with one guidance and without any guidance, respectively. 
RQ3 (Test Diversity): How diverse are the bug-triggering tests generated by different transformation methods and strategies? Referring to the diversity metrics proposed by other fuzzing testing frameworks for DNN models [53], we verify the diversity of failed tests generated by each MRandguidance,andcomparethediversity with existing QA system testing techniques. 
RQ4(Case Study): Analysis of the bug types detected by QATest. As the first uniform fuzzing framework for various types of QA systems, we analyze and classify the erroneous behaviors found by QATest, which could be useful for the optimization of QA systems in future research.",,,"Zixi Liu, Yang Feng, Yining Yin, Jingyu Sun, Zhenyu Chen, Baowen Xu",No URL available
Testing and analysis,Evaluation,-,,,TRUE,-,PHYFU: Fuzzing Modern Physics Simulation Engines,"RQ1: Can PHYFU effectively uncover errors in the modern PSES? 
RQ2: To what extent can the seed scheduling algorithm facilitate the fuzzing campaign? How much overhead does the scheduling process incur? 
RQ3: What are the characteristics of errors uncovered by PHYFU? 
RQ4: What root causes lead to the failures of the tested PSES?",,,"Dongwei Xiao, Zhibo Liu, Shuai Wang",No URL available
Testing and analysis,Evaluation,-,,,TRUE,-,Rete: Learning Namespace Representation for Program Repair,"Do our conditional definition-use (CDU) chains contain strong signal about variable usage? (Section V-B) 
• Is RETE’s prioritisation strategy effective? (Section V-C) 
• Does the best combination of RETE’s components advance the state of the art? (Section V-D)",,,"Nikhil Parasaram, Earl T. Barr, Sergey Mechtaev",No URL available
Testing and analysis,Evaluation,-,,,FALSE,-,Co-Dependence Aware Fuzzing for Dataflow-based Big Data Analytics,"RQ1:WhatisDepFuzz’stestcoveragecomparedtobaselinefuzzers? 
RQ2:HowmanyerrorscanDepFuzzdetectcomparedtobaselines? 
RQ3: Can DepFuzz detect errors located in deeper code regions? 
RQ4: How much overhead does DepFuzz’s instrumentation incur? ",,,"Ahmad Humayun, Miryung Kim, Muhammad Ali Gulzar",No URL available
Testing and analysis,Evaluation,-,,,FALSE,-,CIT4DNN: Generating Diverse and Rare Inputs for Neural Networks Using Latent Space Combinatorial Testing,"RQ1:Howrealisticaretestsgeneratedbycit4dnn? 
RQ2:Howeffectiveiscit4dnningeneratingfeature-diversetests? 
RQ3:Howdoesfaultdensityvarywiththelatentdistribution? 
RQ4:Howcost-effectiveiscit4dnnintargetingnormalandrare inputs?",,,"Swaroopa Dola, Rory McDaniel, Matthew B Dwyer, Mary Lou Soffa",No URL available
Testing and analysis,Knowledge-seeking/Evaluation,-1,-,,FALSE,-,Automatically Resolving Dependency-Conflict Building Failures via Behavior-Consistent Loosening of Library Version Constraints,"RQ1 (Study on DC issues): How did DC issues occur and lead to building failures? What version constraints are desirable in resolving such failures? 
RQ2 (Study on developer practices): How did developers write library version constraints in Python projects? What common practices can be leveraged for resolving DC building failures?
RQ3(Loosening Performance): Can LooCo effectively loosen version constraints for Python projects’ imported libraries? How efficiently can this be done? 
RQ4(Resolving Usefulness): How useful is LooCo for resolving DC building failures by its automatic constraint loosening?",,,"Huiyan Wang, Shuguan Liu, Lingyu Zhang, Chang Xu",No URL available
Analytics,Evaluation,,,,FALSE,B6,Empirical Analysis of Vulnerabilities Life Cycle in Golang Ecosystem,,,,"Jinchang Hu, Lyuye Zhang, Chengwei Liu, Sen Yang, Song Huang, Yang Liu",No URL available
Analytics,Knowledge-seeking,0,,,FALSE,,Do code refactorings influence the merge effort?,"RQ1: Does the occurrence of refactorings in the branches increase the chances of merge effort? 
RQ2: Does the amount of refactorings in the branches increase the chances of merge effort? 
RQ3: Does the amount of refactorings in the branches increase the intensity of merge effort?",,,"André Oliveira, Vania Neves, Alexandre Plastino, Ana Carla Bibiano, Alessandro Garcia, Leonardo Murta",No URL available
Analytics,Knowledge-seeking,0,,,FALSE,,Can Large Language Models Transform Natural Language Intent into Formal Method Postconditions?,"RQ1: Howwell do LLM-generated postconditions formalize informal natural language intent? 
• RQ2: Can LLM-generated postconditions help catch real-world bugs?",,,"Madeline Endres, Sarah Fakhoury, Saikat Chakraborty, Shuvendu K. Lahiri",No URL available
Evolution,Knowledge-seeking / Evaluation,-1,,,FALSE,,Understanding and Remediating Open-Source License Incompatibilities in the PyPI Ecosystem,"RQ1: What is the distribution of licenses and how does licensing evolve in the PyPI ecosystem? 
• RQ2: What is the distribution of license incompatibilities in the dependency graphs of PyPI releases? 
• RQ3: How do PyPI package developers respond to and remediate license incompatibilities in practice?",,,"Weiwei Xu, Hao He, Kai Gao, Minghui Zhou",No URL available
Evolution,,,,,FALSE,-,Safe low-level code without overhead is practical,keine RQs,,,"Solal Pirelli, George Candea",No URL available
Evolution,Evaluation,,,,FALSE,B8,SeeHow: Workflow Extraction from Programming Screencasts through Action-Aware Video Analytics,,,,"Dehai Zhao, Zhenchang Xing, Xin Xia, Deheng Ye, Xiwei (Sherry) Xu, Liming Zhu",No URL available
Requirements and modeling,,,,,FALSE,-,Accelerating OCR-Based Widget Localization for Test Automation of GUI Applications,,,,"Ju Qian, Yingwei Ma, Chenghao Lin, Lin Chen",No URL available
Requirements and modeling,,,,,FALSE,-,Cross-Domain Requirements Linking via Adversarial-based Domain Adaptation,,,,"Zhiyuan Chang, Mingyang Li, Qing Wang, Shoubin Li, Junjie Wang",No URL available
Requirements and modeling,,,,,FALSE,-,Recovering Trace Links Between Software Documentation And Code,,,,"Jan Keim, Sophie Corallo, Dominik Fuchß, Tobias Hey, Tobias Telge, Anne Koziolek",No URL available
Human and social aspects,,,,,FALSE,-,"Matching Skills, Past Collaboration, and Limited Competition: Modeling When Open-Source Projects Attract Contributors",,,,"Hongbo Fang, James Herbsleb, Bogdan Vasilescu",No URL available
Human and social aspects,,,,,FALSE,-,"Building and Sustaining Ethnically, Racially, and Gender Diverse Software Engineering Teams: A Study at Google",,,,"Ella Dagan, Anita Sarma, Alison Chang, Sarah D'Angelo, Jillian Dicker, Emerson Murphy-Hill",No URL available
Human and social aspects,,,,,FALSE,-,How Practitioners Expect Code Completion?,,,,"Chaozheng Wang, Junhao Hu, Cuiyun Gao, Yu Jin, Tao Xie, Hailiang Huang, Zhenyu Lei, Yuetang Deng",No URL available
Dependability and Security,Evaluation,-,,,FALSE,-,Verifying Declarative Smart Contracts,,,,"Haoxian Chen, Lan Lu, Brendan Massey, Yuepeng Wang, Boon Thau Loo",No URL available
Dependability and Security,Evaluation,-,,,FALSE,-,When Less is Enough: Positive and Unlabeled Learning Model for Vulnerability Detection,,,,"Xin-Cheng Wen, Xinchen Wang, Cuiyun Gao, Shaohua Wang, Yang Liu, Zhaoquan Gu",No URL available
Dependability and Security,Evaluation,-,,,FALSE,-,PrettySmart: Detecting Permission Re-delegation Vulnerability for Token Behaviors in Smart Contracts,,,,"Zhijie Zhong, Hong-Ning Dai, Zibin Zheng, Qing Xue, Junjia Chen, Yuhong Nan",No URL available